import { _ as __decorate, a as attr, b as __metadata, h as html } from './index.js';
import { I as Icon } from './icon.js';

let _ = t => t,
  _t;
class AffixIcon {}
__decorate([attr, __metadata("design:type", String)], AffixIcon.prototype, "icon", void 0);
class AffixIconWithTrailing extends AffixIcon {
  constructor() {
    super(...arguments);
    this.iconTrailing = false;
  }
}
__decorate([attr({
  mode: 'boolean',
  attribute: 'icon-trailing'
}), __metadata("design:type", Object)], AffixIconWithTrailing.prototype, "iconTrailing", void 0);
const affixIconTemplateFactory = context => {
  const iconTag = context.tagFor(Icon);
  return icon => icon ? html(_t || (_t = _`<span class="${0}"><${0} :name="${0}"></${0}></span>`), 'icon', iconTag, () => icon, iconTag) : null;
};

export { AffixIconWithTrailing as A, affixIconTemplateFactory as a, AffixIcon as b };
