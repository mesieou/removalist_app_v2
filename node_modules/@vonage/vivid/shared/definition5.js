import { F as FoundationElement, _ as __decorate, a as attr, b as __metadata, h as html, r as registerFactory } from './index.js';
import { c as classNames } from './class-names.js';

var css_248z = "/**\n * Do not edit directly\n * Generated on Wed, 17 May 2023 03:28:45 GMT\n */\n:host {\n  display: inline-block;\n}\n\n.base {\n  position: relative;\n  display: flex;\n  box-sizing: border-box;\n  align-items: center;\n  background-color: var(--_appearance-color-fill);\n  inline-size: inherit;\n  vertical-align: middle;\n}\n.base {\n  --_connotation-color-backdrop: var(--vvd-color-canvas);\n  --_connotation-color-primary: var(--vvd-color-canvas-text);\n  --_connotation-color-intermediate: var(--vvd-color-neutral-500);\n  --_connotation-color-faint: var(--vvd-color-neutral-50);\n}\n.base {\n  --_appearance-color-text: var(--vvd-color-canvas-text);\n  --_appearance-color-fill: var(--_connotation-color-backdrop);\n  --_appearance-color-outline: var(--_connotation-color-intermediate);\n}\n.base.appearance-ghost {\n  --_appearance-color-text: var(--_connotation-color-primary);\n  --_appearance-color-fill: transparent;\n  --_appearance-color-outline: transparent;\n}\n.base::before {\n  position: absolute;\n  z-index: 1;\n  border-radius: inherit;\n  box-shadow: inset 0 0 0 1px var(--_appearance-color-outline);\n  content: \"\";\n  inset: 0;\n  pointer-events: none;\n}\n.base:not(.tight) {\n  padding: 4px;\n  column-gap: 4px;\n}\n\n/* Shape */\n.base:not(.shape-pill) {\n  border-radius: 6px;\n}\n\n.base.shape-pill {\n  border-radius: 24px;\n}\n\n/* Separator */\n::slotted([role=separator]) {\n  align-self: stretch;\n  margin-block: 4px;\n}";

class ActionGroup extends FoundationElement {
  constructor() {
    super(...arguments);
    this.tight = false;
    this.ariaLabel = null;
  }
}
__decorate([attr, __metadata("design:type", String)], ActionGroup.prototype, "shape", void 0);
__decorate([attr, __metadata("design:type", String)], ActionGroup.prototype, "appearance", void 0);
__decorate([attr({
  mode: 'boolean'
}), __metadata("design:type", Object)], ActionGroup.prototype, "tight", void 0);
__decorate([attr(), __metadata("design:type", Object)], ActionGroup.prototype, "role", void 0);
__decorate([attr({
  attribute: 'aria-label'
}), __metadata("design:type", Object)], ActionGroup.prototype, "ariaLabel", void 0);

let _ = t => t,
  _t;
const getClasses = ({
  appearance,
  shape,
  tight
}) => classNames('base', [`appearance-${appearance}`, Boolean(appearance)], [`shape-${shape}`, Boolean(shape)], ['tight', tight]);
const ActionGroupTemplate = () => html(_t || (_t = _`
<div class="${0}" 
	role="${0}" 
	aria-label="${0}">
  <slot></slot>
</div>`), getClasses, x => x.role ? x.role : 'group', x => x.ariaLabel);

const actionGroupDefinition = ActionGroup.compose({
  baseName: 'action-group',
  template: ActionGroupTemplate,
  styles: css_248z
});
const actionGroupRegistries = [actionGroupDefinition()];
const registerActionGroup = registerFactory(actionGroupRegistries);

export { actionGroupDefinition as a, actionGroupRegistries as b, registerActionGroup as r };
