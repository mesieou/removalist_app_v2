import { F as FoundationElement, _ as __decorate, a as attr, b as __metadata, h as html, r as registerFactory } from './index.js';
import { c as classNames } from './class-names.js';

class Elevation extends FoundationElement {}
__decorate([attr, __metadata("design:type", Number)], Elevation.prototype, "dp", void 0);
__decorate([attr({
  attribute: 'no-shadow',
  mode: 'boolean'
}), __metadata("design:type", Boolean)], Elevation.prototype, "noShadow", void 0);

var css_248z = ":host {\n  display: contents;\n}\n\n.control {\n  display: contents;\n}\n.control.dp-0 {\n  --_elevation-fill: var(--vvd-color-surface-0dp);\n  --_elevation-shadow: var(--vvd-shadow-surface-0dp);\n}\n.control.dp-4 {\n  --_elevation-fill: var(--vvd-color-surface-4dp);\n  --_elevation-shadow: var(--vvd-shadow-surface-4dp);\n}\n.control.dp-8 {\n  --_elevation-fill: var(--vvd-color-surface-8dp);\n  --_elevation-shadow: var(--vvd-shadow-surface-8dp);\n}\n.control.dp-12 {\n  --_elevation-fill: var(--vvd-color-surface-12dp);\n  --_elevation-shadow: var(--vvd-shadow-surface-12dp);\n}\n.control.dp-16 {\n  --_elevation-fill: var(--vvd-color-surface-16dp);\n  --_elevation-shadow: var(--vvd-shadow-surface-16dp);\n}\n.control.dp-24 {\n  --_elevation-fill: var(--vvd-color-surface-24dp);\n  --_elevation-shadow: var(--vvd-shadow-surface-24dp);\n}\n.control:not(.dp-0, .dp-4, .dp-8, .dp-12, .dp-16, .dp-24) {\n  --_elevation-fill: var(--vvd-color-surface-2dp);\n  --_elevation-shadow: var(--vvd-shadow-surface-2dp);\n}\n.control ::slotted(*) {\n  background: var(--_elevation-fill);\n  filter: var(--_elevation-shadow);\n  transition: background-color 0.15s linear, filter 0.15s linear;\n}\n.control.no-shadow ::slotted(*) {\n  filter: none;\n}";

let _ = t => t,
  _t;
const getClasses = ({
  dp,
  noShadow
}) => classNames('control', [`dp-${dp}`, Boolean(dp)], ['no-shadow', Boolean(noShadow)]);
const elevationTemplate = () => html(_t || (_t = _`
        <div class="${0}" part="base">
			<slot></slot>
		</div>`), getClasses);

const elevationDefinition = Elevation.compose({
  baseName: 'elevation',
  template: elevationTemplate,
  styles: css_248z
});
const elevationRegistries = [elevationDefinition()];
const registerElevation = registerFactory(elevationRegistries);

export { Elevation as E, elevationDefinition as a, elevationRegistries as e, registerElevation as r };
