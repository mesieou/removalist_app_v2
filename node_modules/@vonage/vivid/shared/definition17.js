import { F as FoundationElement, _ as __decorate, a as attr, b as __metadata, o as observable, h as html, r as registerFactory } from './index.js';
import { i as iconRegistries } from './definition3.js';
import { E as Elevation, e as elevationRegistries } from './definition8.js';
import { I as Icon } from './icon.js';
import { s as slotted } from './slotted.js';
import { w as when } from './when.js';
import { c as classNames } from './class-names.js';

var css_248z = "/**\n * Do not edit directly\n * Generated on Wed, 17 May 2023 03:28:45 GMT\n */\n:host {\n  display: flex;\n}\n\n.base {\n  border-radius: 6px;\n  inline-size: 100%;\n  text-align: start;\n}\n\n.wrapper {\n  display: flex;\n  overflow: hidden;\n  flex-flow: column;\n  block-size: inherit;\n  border-radius: inherit;\n  color: var(--vvd-color-canvas-text);\n}\n\n.main-content {\n  display: flex;\n  flex-flow: column;\n  padding: 24px;\n}\n\n.header {\n  display: flex;\n  flex: 1;\n  align-items: flex-start;\n  gap: 8px;\n}\n.header-content {\n  flex: 1;\n}\n.header-wrapper {\n  display: flex;\n  gap: 8px;\n}\n.header-headline, .header-subtitle {\n  /* stylelint-disable value-no-vendor-prefix */\n  display: -webkit-box;\n  /* stylelint-enable value-no-vendor-prefix */\n  overflow: hidden;\n  -webkit-box-orient: vertical;\n}\n.header-headline {\n  font: var(--vvd-typography-heading-4);\n  -webkit-line-clamp: var(--headline-line-clamp);\n}\n.header-subtitle {\n  font: var(--vvd-typography-base);\n  -webkit-line-clamp: var(--subtitle-line-clamp);\n}\n.hide-header .header {\n  display: none;\n}\n\n.header-subtitle,\n.text {\n  color: var(--vvd-color-neutral-600);\n  font: var(--vvd-typography-base);\n}\n\n.text {\n  padding-right: 8px;\n  margin-top: 12px;\n}\n\n.footer {\n  display: inline-flex;\n  flex-direction: column;\n  align-items: flex-end;\n  padding-bottom: 24px;\n  margin-top: auto;\n  padding-inline: 24px;\n}\n.hide-footer .footer {\n  display: none;\n}\n\n::slotted([slot=graphic i]),\n.icon {\n  flex-shrink: 0;\n  align-self: baseline;\n  margin-block-start: 4px;\n}\n\n.icon {\n  font-size: 20px;\n}\n\n::slotted([slot=meta i]) {\n  flex-shrink: 0;\n  align-self: flex-start;\n  margin-block-start: -8px;\n  margin-inline-end: -8px;\n  margin-inline-start: auto;\n}";

class Card extends FoundationElement {}
__decorate([attr, __metadata("design:type", String)], Card.prototype, "headline", void 0);
__decorate([attr, __metadata("design:type", String)], Card.prototype, "subtitle", void 0);
__decorate([attr, __metadata("design:type", String)], Card.prototype, "text", void 0);
__decorate([attr, __metadata("design:type", String)], Card.prototype, "icon", void 0);
__decorate([attr, __metadata("design:type", Number)], Card.prototype, "elevation", void 0);
__decorate([observable, __metadata("design:type", Array)], Card.prototype, "footerSlottedContent", void 0);
__decorate([observable, __metadata("design:type", Array)], Card.prototype, "graphicSlottedContent", void 0);
__decorate([observable, __metadata("design:type", Array)], Card.prototype, "hasMetaSlottedContent", void 0);

let _2 = t => t,
  _t,
  _t2,
  _t3,
  _t4,
  _t5,
  _t6,
  _t7,
  _t8;
const getClasses = _ => classNames('base', ['hide-footer', !_.footerSlottedContent || !_.footerSlottedContent.length], ['hide-header', shouldHideHeader(_)]);
function renderHeaderIcon(iconTag) {
  return html(_t || (_t = _2`
	  <${0} class="icon" inline name="${0}"></${0}>`), iconTag, x => x.icon, iconTag);
}
function Headline() {
  return html(_t2 || (_t2 = _2`
		<div class="header-headline">${0}</div>
	`), x => x.headline);
}
function Subtitle() {
  return html(_t3 || (_t3 = _2`
		<div class="header-subtitle">${0}</div>
	`), x => x.subtitle);
}
function headerContent() {
  return html(_t4 || (_t4 = _2`
		<div class="header-content">
			${0}
			${0}
		</div>
	`), when(x => x.headline, Headline()), when(x => x.subtitle, Subtitle()));
}
function renderHeader(iconTag) {
  return html(_t5 || (_t5 = _2`
		<header class="header">
			<slot name="graphic" ${0}>${0}</slot>
			${0}
		</header>`), slotted('graphicSlottedContent'), when(x => x.icon, renderHeaderIcon(iconTag)), when(x => x.headline || x.subtitle, headerContent()));
}
function shouldHideHeader(card) {
  return !card.headline && !card.subtitle && !card.icon && (!card.graphicSlottedContent || !card.graphicSlottedContent.length);
}
function renderMetaSlot() {
  return html(_t6 || (_t6 = _2`
		<slot name="meta" ${0}></slot>
	`), slotted('metaSlottedContent'));
}
function text() {
  return html(_t7 || (_t7 = _2`
		<div class="text">${0}</div>
	`), x => x.text);
}
const CardTemplate = context => {
  const elevationTag = context.tagFor(Elevation);
  const iconTag = context.tagFor(Icon);
  return html(_t8 || (_t8 = _2`
	<${0} dp=${0}>

		<div class="${0}">
			<div class="wrapper">
				<div class="vwc-card-media">
					<slot name="media"></slot>
				</div>
				<slot name="main">
					<div class="main-content">
						<div class="header-wrapper">
							${0}
							${0}
						</div>
						${0}
					</div>
				</slot>
				<div class="footer">
					<slot name="footer" ${0}></slot>
				</div>
			</div>
		</div>

	</${0}>
`), elevationTag, x => {
    var _a;
    return (_a = x.elevation) !== null && _a !== void 0 ? _a : '4';
  }, getClasses, renderHeader(iconTag), renderMetaSlot(), when(x => x.text, text()), slotted('footerSlottedContent'), elevationTag);
};

const cardDefinition = Card.compose({
  baseName: 'card',
  template: CardTemplate,
  styles: css_248z
});
const cardRegistries = [cardDefinition(), ...iconRegistries, ...elevationRegistries];
const registerCard = registerFactory(cardRegistries);

export { cardRegistries as a, cardDefinition as c, registerCard as r };
