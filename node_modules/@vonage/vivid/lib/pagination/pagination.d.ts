import { FoundationElement } from '@microsoft/fast-foundation';
import type { Size } from '../enums';
import type { Button } from '../button/button';
export declare type PaginationSize = Extract<Size, Size.SuperCondensed | Size.Condensed | Size.Normal>;
export declare class Pagination extends FoundationElement {
    size?: PaginationSize;
    paginationButtons?: Button[];
    prevButton?: Button;
    nextButton?: Button;
    navIcons: boolean;
    get pagesList(): (number | "...")[];
    total: number;
    selectedIndex: number | undefined;
    constructor();
    totalChanged(_: number, newValue: number): void;
    selectedIndexChanged(oldValue: number, newValue: number): void;
    paginationButtonsChanged(_: Button[] | undefined, newValue: Button[]): void;
}
